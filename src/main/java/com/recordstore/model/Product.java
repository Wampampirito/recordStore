package com.recordstore.model;

import com.recordstore.enums.PRODUCT_CATEGORY;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Inheritance;
import jakarta.persistence.Table;
import jakarta.persistence.InheritanceType;

import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;

// import com.fasterxml.jackson.annotation.JsonSubTypes;
// import com.fasterxml.jackson.annotation.JsonTypeInfo;

/**
 * Abstract class representing the base entity for all products in the system.
 * <p>
 * This class serves as a superclass for various types of products, such as Vinyl, Portable, Turntable, Headphone, and Speaker.
 * It implements the {@code JOINED} inheritance strategy in the database and defines common attributes such as name, price, stock, and product category.
 * </p>
 * <p>
 * Additionally, it uses Jackson annotations for the serialization and deserialization of its subclasses.
 * </p>
 *
 * @see Vinyl
 * @see Portable
 * @see Turntable
 * @see Headphone
 * @see Speaker
 */
// @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "type")
// @JsonSubTypes({
//         @JsonSubTypes.Type(value = Vinyl.class, name = "vinyl"),
//         @JsonSubTypes.Type(value = Portable.class, name = "portable"),
//         @JsonSubTypes.Type(value = Turntable.class, name = "turntable"),
//         @JsonSubTypes.Type(value = Headphone.class, name = "headphone"),
//         @JsonSubTypes.Type(value = Speaker.class, name = "speaker")
// })
@Inheritance(strategy = InheritanceType.JOINED)
@Entity
@Table(name = "products")
@Data
@EqualsAndHashCode
@NoArgsConstructor
public abstract class Product {

    /**
     * Unique identifier for the product (id).
     * <p>
     * This is the primary key for the entity and is automatically generated by the database.
     * </p>
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    private Integer id;

    /**
     * The name of the product.
     */
    @Column(name = "name")
    private String name;

    /**
     * The price of the product.
     */
    @Column(name = "price")
    private Double price;

    /**
     * The available stock of the product.
     */
    @Column(name = "stock")
    private Integer stock;

    /**
     * The category of the product.
     * This field is an enumeration and determines the product's type (e.g., Vinyl, Headphone).
     */
    @Column(name = "product_category")
    @Enumerated(EnumType.STRING)
    private PRODUCT_CATEGORY productCategory;

    /**
     * Parameterized constructor to initialize a product with its main attributes.
     *
     * @param name            The name of the product.
     * @param price           The price of the product.
     * @param stock           The quantity available in stock.
     * @param productCategory The category of the product.
     */
    public Product(String name, Double price, Integer stock) {
        this.name = name;
        this.price = price;
        this.stock = stock;
    }
}
